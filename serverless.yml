service: psy-core

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: eu-west-3
  environment:
    DYNAMODB_TABLE: PsyDB
    WEBSOCKET_CONNECTIONS_TABLE: WebSocketConnections
    IS_OFFLINE: ${env:IS_OFFLINE, 'false'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:DeleteItem
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:eu-west-3:335835489790:table/PsyDB
            - arn:aws:dynamodb:eu-west-3:335835489790:table/WebSocketConnections
            - arn:aws:dynamodb:eu-west-3:335835489790:table/PsyDB/index/GSI1
        - Effect: Allow
          Action:
            - execute-api:ManageConnections
          Resource:
            - arn:aws:execute-api:eu-west-3:335835489790:yme9o8ixtg/*/POST/@connections/*

resources:
  Resources:
    PsyDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PsyDB
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1_PK
            AttributeType: S
          - AttributeName: GSI1_SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1_PK
                KeyType: HASH
              - AttributeName: GSI1_SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    WebSocketConnectionsDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: WebSocketConnections
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: connectionId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

functions:
  createPatient:
    handler: handler.handler
    events:
      - http:
          path: patient
          method: post

  getPatient:
    handler: handler.handler
    events:
      - http:
          path: patient/{id}
          method: get

  getPatientsByPsychologist:
    handler: handler.handler
    events:
      - http:
          path: patients/psychologist/{psychologist_id}
          method: get

  createPsychologist:
    handler: handler.handler
    events:
      - http:
          path: psychologist
          method: post

  getPsychologist:
    handler: handler.handler
    events:
      - http:
          path: psychologist/{id}
          method: get

  createDiscussionMessage:
    handler: handler.handler
    events:
      - http:
          path: discussion_message
          method: post

  getDiscussionMessagesByPsychologist:
    handler: handler.handler
    events:
      - http:
          path: discussion_messages/psychologist/{psychologist_id}
          method: get

  getDiscussionMessagesPsychologistPatient:
    handler: handler.handler
    events:
      - http:
          path: discussion_messages/{psychologist_id}/{patient_id}
          method: get

  createConsultation:
    handler: handler.handler
    events:
      - http:
          path: consultation
          method: post

  getConsultationsByPsychologist:
    handler: handler.handler
    events:
      - http:
          path: consultations/psychologist/{psychologist_id}
          method: get

  getConsultationsPsychologistPatient:
    handler: handler.handler
    events:
      - http:
          path: consultations/{psychologist_id}/{patient_id}
          method: get

  createInvoice:
    handler: handler.handler
    events:
      - http:
          path: invoice
          method: post

  getInvoice:
    handler: handler.handler
    events:
      - http:
          path: invoice/{id}
          method: get

  getInvoicesByPsychologist:
    handler: handler.handler
    events:
      - http:
          path: invoices/psychologist/{psychologist_id}
          method: get

  getInvoicesPsychologistPatient:
    handler: handler.handler
    events:
      - http:
          path: invoices/{psychologist_id}/{patient_id}
          method: get

  websocketConnect:
    handler: websocket.connect
    events:
      - websocket:
          route: $connect

  websocketDisconnect:
    handler: websocket.disconnect
    events:
      - websocket:
          route: $disconnect

  websocketDefault:
    handler: websocket.default
    events:
      - websocket:
          route: $default

  sendMessage:
    handler: websocket.send_message
    events:
      - websocket:
          route: sendMessage

plugins:
  - serverless-python-requirements
  - serverless-offline

package:
  exclude:
    - node_modules/**
    - venv/**
    - __pycache__/**

custom:
  pythonRequirements:
    dockerizePip: true
  serverless-offline:
    port: 3001